解决方案结构：
    Libraries：商城基础类库，主要提供系统核心，数据访问，业务逻辑等功能。
    Presentation：商城web展示，提供网站前台和后台实现。
    Strategies：包含各种策略程序集
    Plugins：包含开发授权，支付等插件。
项目简介：
	BrnShop.Core项目：这个项目是BrnShop最核心的项目，它提供商城最底层，最基础的服务。
	BrnShop.Data项目:这个项目主要是通过调用BrnShop.Core项目中的BSPData类来和各种数据存储做交互。
	BrnShop.Services项目:商城的业务功能实现，如果你想找商城某个功能的实现可以来这个项目中找，例如购物车的实现。PS：在BrnShop.Service项目中有个Admin文件夹，这个文件夹是商城后台操作要用到的类。
	BrnShop.Web.Framework项目:这个项目主要提供商城web层面的设计。大家可以打开看一看里面都是自定义控制器类，分页，动作筛选器等MVC方面的东西。
	BrnShop.Web.Admin项目:商城网站后台，这个项目的类型是类库，不是web项目(但mvc的各部分俱全)，所以不能直接启动。
	BrnShop.Web项目:商城网站前台：使用ASP.NET MVC3实现。
登录处理：
	未登录时，登录是游客
	登录后保存用户信息到cookie,打开其他页面时按cookie来获取用户信息
	控制器基类通过上下文来保持信息
数据库管理：
	核心思想，定义操作接口，具体实现通过策略来实现，动态加载
	BSPData类是数据库操作类，包含了关系型数据库和非关系型数据
	关系型数据库思路和实现
	1、关系型数据库接口：IRDBSStrategy 
	2、关系型数据库策略：BrnShop.RDBSStrategy.SqlServer，使用SqlServer实现
	3、BSPData是数据工厂，通过具体的程序集来加载
	4、BrnShop.Data类库是数据的业务实现
插件管理：
	1、加载
		1）、获取插件目录和插件动态库目录
		2）、获取配置文件中的插件系统名称列表（插件名称）
		3）、获取插件目录下的所有插件信息（通过每个插件目录下的plugin.config文件）
		4）、加载插件DLL文件
		5）、部署DLL文件（添加到当前程序域）
	2、安装
	3、卸载
	4、编辑
	5、设置默认
	6、获得安装的插件系统名称列表
	7、保存安装的插件系统名称列表
	8、获得全部插件
	9、部署程序集
	10、判断插件是否已经安装
区域管理：
	Admin和Mobile两个区域作为单独项目以方便管理
	1、在AreaRegistration.cs文件中注册区域，需要注明命名空间，防止冲突
	2、区域项目位置要在主项目里
	3、要定义新的视图引擎类，可以让区域的cshtml被访问到